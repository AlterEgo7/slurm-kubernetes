---

- name: Create glusterfs directories
  file:
    path: "{{ gluster_kubernetes_workdir }}"
    state: directory

- name: Download gluster-kubernetes
  unarchive:
    src: "https://github.com/gluster/gluster-kubernetes/archive/{{ gluster_kubernetes_version }}.tar.gz"
    dest: "{{ gluster_kubernetes_workdir }}"
    remote_src: yes

- name: Download heketi client
  unarchive:
    src: "https://github.com/heketi/heketi/releases/download/{{ heketi_version }}/heketi-client-{{ heketi_version }}.linux.amd64.tar.gz"
    dest: "{{ gluster_kubernetes_workdir }}"
    remote_src: yes

- name: Copy heketi-cli to /usr/bin/local
  become: true
  copy:
    src: "{{ gluster_kubernetes_workdir }}/heketi-client/bin/heketi-cli"
    dest: /usr/local/bin
    remote_src: yes
    mode: "a+x"

- name: Add GlusterFS topology file
  template:
    src: templates/topology.json.j2
    dest: "{{ gluster_kubernetes_workdir }}/gluster-kubernetes-1.1/deploy/topology.json"

- name: Add gluster namespace manifest
  template:
    src: templates/gluster_namespace.json.j2
    dest: /tmp/gluster_namespace.json

- name: Create Kubernetes namespace
  command: kubectl apply -f /tmp/gluster_namespace.json

- name: Label glusterfs nodes
  command: kubectl label node {{ item }} storagenode=glusterfs --overwrite
  with_items:
  - "{{ groups['glusterfs-node'] }}"

- name: Create glusterfs resources
  command: kubectl --namespace={{ gluster_kubernetes_namespace }} apply -f {{ item }}
  args:
    chdir: "{{ gluster_kubernetes_workdir }}/gluster-kubernetes-1.1/deploy/kube-templates"
  with_items:
    - "heketi-service-account.yaml"
    - "glusterfs-daemonset.yaml"

- name: Wait for glusterfs daemonset to come online
  shell: kubectl --namespace={{ gluster_kubernetes_namespace }} get daemonset glusterfs --no-headers | awk '{ print $4}'
  register: ready
  until: ready.stdout == "{{ groups['glusterfs-node'] | length }}"
  retries: 60
  delay: 5

- name: Deploy heketi server
  command: kubectl --namespace={{ gluster_kubernetes_namespace }} apply -f deploy-heketi-deployment.yaml
  args:
    chdir: "{{ gluster_kubernetes_workdir }}/gluster-kubernetes-1.1/deploy/kube-templates"

- name: Extract heketi endpoint IP
  shell: kubectl --namespace={{ gluster_kubernetes_namespace }} get service | grep deploy-heketi | awk '{ print $2 }'
  register: heketi_ip

- debug: msg="{{ heketi_ip }}"

- name: Wait for heketi to come online
  shell: kubectl --namespace={{ gluster_kubernetes_namespace }} get deployment --no-headers deploy-heketi | awk '{ print $5 }'
  register: heketi_ready
  until: heketi_ready.stdout == "1"
  retries: 60
  delay: 1

- set_fact:
    heketi_endpoint: "http://{{ heketi_ip.stdout }}:8080"

- name: Apply glusterfs topology
  command: heketi-cli topology load --json=topology.json
  args:
    chdir: "{{ gluster_kubernetes_workdir }}/gluster-kubernetes-1.1/deploy"
  environment:
    HEKETI_CLI_SERVER: "{{ heketi_endpoint }}"

- name: Add gluster storage class manifest
  template:
    src: templates/gluster-storage.yaml.j2
    dest: /tmp/gluster-storage.yaml

- name: Create gluster storage class
  command: kubectl --namespace={{ gluster_kubernetes_namespace }} apply -f /tmp/gluster-storage.yaml